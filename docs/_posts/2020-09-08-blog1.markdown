---
layout: post
title:  "Blog 1"
date:   2020-09-08 12:40:45 -0700
categories: senior design
---

<html>



<style>
{% include custom.css %}
</style>

  <title>Blog 1</title>
<body>
<ul class="navbar">
 
  <li class="navbar"><a class="home" href="http://dec98524.github.io/">Home</a></li>
  <li class="navbar"><a href="https://github.com/dec98524/dec98524.github.io">Git Hub</a></li>
  <li class="navbar"><a href="https://www.instagram.com/im.davidcastaneda/">Instagram</a></li>
  <li class="navbar"><a href="https://twitter.com/refilldranks">Twitter</a></li>

</ul>
<br>
<div class="dropdown">
  <button class="dropbtn">All Blog Posts</button>
  <div class="dropdown-content">
    <a href="https://dec98524.github.io/senior/design/2020/08/27/blog-0.html">Blog 0</a>
    <a href="https://dec98524.github.io/senior/design/2020/09/08/blog1.html">Blog 1</a>
                <a href="https://dec98524.github.io/senior/design/2020/09/18/blog2.html">Blog 2</a>
  </div>
</div><br>
<br>
<marquee style="color:black;font-size: 20pt" behavior="scroll" direction="left"><i>Welcome to my blog site!</i></marquee>

    <center>
<img src="https://www.csun.edu/ua/2017logos/Seal-CSUN-Horizontal-186.png" alt="CSUN CIT" align="middle">
</center>

<h2>Introduction - Assignments Worked On</h2>

<p>Welcome back to my blog site! For Blog 1, I will be discussing various assignments I worked on this week, things I learned and even things I struggled with. Once again, I will be discussing the stuff I worked on in my COMP 484 and CIT 480 classes. This week in COMP 484 I was given three homework assignments all relating to HTML. In addition to those assignments, I was also given a lab to work on in my CIT 480 class. This lab consisted of using a program known as Docker to build a lamp stack. In the sections below, Iâ€™ll discuss each assignment, covering the steps I took to complete them. At the end, you can find a reflection where I will cover what I learned.</p>

<h2>CIT 480 - Lab 1 - Lamp Stack</h2> 
<p><a href="https://canvas.csun.edu/courses/81618/files/10141705/download?wrap=1" style="text-decoration: underline">Lab link - <b>CLICKING THIS WILL DOWNLOAD A PDF FILE OF THE LAB</b></a><br> 
</p> 
      

<p>This assignment consisted of installing certain  and using it to install packages via the command line and using web server software to display the webpage. The first step I had to do was install Docker.</p>


    <center>
    <a href="https://www.docker.com/">
<img src="https://miro.medium.com/max/2404/1*JUOITpaBdlrMP9D__-K5Fw.png" alt="Docker Logo" align="middle">
</a>
</center>
<br> <br>

<dl>
  <dt><b>Docker</b></dt>
  <dd>Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.</dd>
</dl>
<p>To install docker, visit <a href="https://www.docker.com/" style="text-decoration: underline">docker.com</a> and click on get started.<br>
    Then click on the download tab and select your corresponding operating system.</p>
 <br><br>
  <center>
<img src="https://i.imgur.com/wZxrVif.png" alt="Docker Logo" align="middle" width="auto" height="auto">
 <br><br>
<img src="https://i.imgur.com/g8fujvU.png" alt="Docker Logo" align="middle" width="auto" height="auto">
</center>
<br><br>
    
<p>After I got familiar with a few of the Docker commands, the next step was to install Apache.</p>
      <center>
      <a href="https://httpd.apache.org/">
      <img src="https://lh3.googleusercontent.com/FhcvMIodMAcv0JrG1jctJ2N8yNC9R8SR59FuVuK8im5EwSVfpqqOXsY1ml_uUfDxRBFTc20rJ9nU3ka5sOL-wv9HOXQgq6vpebxWr5BgUQXDtXAlfSPHq1ExfLaRE3sk3uL5XPso" alt="Apache Logo" align="middle">
    </a>      
</center>

  <dl>
  <dt><b>Apache</b></dt>
  <dd>The Apache HTTP Server, colloquially called Apache, is a free and open-source cross-platform web server software, released under the terms of Apache License 2.0. Apache is developed and maintained by an open community of developers under the auspices of the Apache Software Foundation.</dd>
</dl>

<p> In order to install Apache, and to check the version, type these commands into the command line on your terminal: 
     <br><code> $ apt-get install apache2 </code><br><code> $ apache2 -v</code><br></p>
<p>Then to start it, chack the status and test it, input the following commands:  <br><code> service apache2 start </code><br><code> service apache2 status</code><br><code>localhost:8080</code></p>     

<p>In the lab, I also used a database management system known as MySQL</p>
      <center>
     <a href="https://www.mysql.com/">
      <img src="https://d1.awsstatic.com/asset-repository/products/amazon-rds/1024px-MySQL.ff87215b43fd7292af172e2a5d9b844217262571.png" alt="SQL Logo" align="middle">
    </a>
</center>

  <dl>
  <dt><b>MySQL</b></dt>
  <dd>MySQL is an open-source relational database management system. Its name is a combination of "My", the name of co-founder Michael Widenius's daughter, and "SQL", the abbreviation for Structured Query Language.</dd>
</dl>
<p> To install MySQL and to verify the installation, type the following commands<br><code>$ apt-get install -y mysql-client</code><br><code>$ dpkg --get-selections | grep mysql</code><br></p>
     
<p>I then went on to install PHP and all of it's required packages</p>
      <center>
        <a href="https://www.php.net/">
      <img src="https://www.php.net/images/logos/new-php-logo.svg" alt="PHP Logo" align="middle">
    </a>
</center>

  <dl>
  <dt><b>PHP</b></dt>
  <dd>PHP is a general-purpose scripting language that is especially suited to web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994; the PHP reference implementation is now produced by The PHP Group.</dd>
</dl>
 <p> In order to install PHP and all of the packages, and to check the version, type these commands into the command line on your terminal: 
     <br><code>$ apt-get install -y php libapache2-mod-php php-mysql php7.2-cli php7.2-curl php7.2-gd php7.2-mbstring php7.2-mysql php7.2-xmlphp-xml</code><br><code>$ php -v</code><br></p>


<p>The final thing I needed to install was Composer</p>
      <center>
        <a href="https://getcomposer.org/">
      <img src="https://getcomposer.org/img/logo-composer-transparent.png" alt="Composer Logo" align="middle">
    </a>
</center>

  <dl>
  <dt><b>Composer</b></dt>
  <dd>Composer is an application-level package manager for the PHP programming language that provides a standard format for managing dependencies of PHP software and required libraries. It was developed by Nils Adermann and Jordi Boggiano, who continue to manage the project.</dd>
</dl>
 <p> In order to install composer type this command into the command line on your terminal: 
     <br><code>$ curl -sS https://getcomposer.org/installer | php ----install-dir=/usr/local/bin --filename=composer</code></p>
<br>
<p>After installing all of these packages, I was able to successfully set up a LAMP stack and display it on a a web page. Here was my output:</p>

<br><br>
  <center>
<img src="https://i.imgur.com/kDY0NCy.png" alt="Browser Output" align="middle" width="auto" height="auto">
 <br><br>
<img src="https://i.imgur.com/8VgOk7N.png" alt="Terminal Output" align="middle" width="auto" height="auto">
</center>
<br><br>


<h2>COMP 484 - Homework - HTML</h2> 

<p>In my COMP 484 class, I was assigned three homework assignments. Though it seems like a lot, these assignments were rather simple. A main part if the homework consisted of taking an html file and editing it to structure the page using elements such header, nav, main, article, section, aside and footer.We were then asked to add ARIA roles to the elements. Below you can find the meaning to some of these very important HTML Terms:</p>
 
  <center>
    <a href="https://www.w3schools.com/html/">
<img src="https://cdn.mos.cms.futurecdn.net/hFm4iWXhbw4c4rdcMH8tUD.jpg" alt="HTML Logo" align="middle">
</a>
</center>
<br> <br>
<h3>All definitions from <a href="https://www.w3schools.com">w3schools.com</a></h3>
<dl>
  <dt><b>Header</b></dt>
  <dd>The header element represents a container for introductory content or a set of navigational links. Headers often include one or more heading elements (h1 - h6), logos or icons and authorship information</dd>
  <dt><b>Nav</b></dt>
  <dd>The nav tag defines a set of navigation links. Notice that NOT all links of a document should be inside a nav element. The nav element is intended only for major block of navigation links. Browsers, such as screen readers for disabled users, can use this element to determine whether to omit the initial rendering of this content.</dd>
  <dt><b>Main</b></dt>
  <dd>The main tag specifies the main content of a document. The content inside the main element should be unique to the document. It should not contain any content that is repeated across documents such as sidebars, navigation links, copyright information, site logos, and search forms.</dd>
  <dt><b>Article</b></dt>
  <dd>The article tag specifies independent, self-contained content. An article should make sense on its own and it should be possible to distribute it independently from the rest of the site. Potential uses include Forum posts, Blog posts and News stories.

</dd>
  <dt><b>Section</b></dt>
  <dd>The section tag simply defines a section in a document.
</dd>
  <dt><b>Aside</b></dt>
  <dd>The aside tag defines some content aside from the content it is placed in. The aside content should be indirectly related to the surrounding content.</dd>
  <dt><b>Footer</b></dt>
  <dd>The footer tag defines a footer for a document or section. A footer element typically contains: authorship information, copyright information, contact information, sitemap, back to top links and related documents. You can have several footer elements in one document.</dd>
    
</dl>

<h2>Reflection - Things I learned</h2>
<p>After completeing all my assignments this week, there were definitely some new things I learned. One of the main things I learned was the importance of a LAMP stack and the role it plays in web development. Despite many of my peers using Docker in previous classes, this was the first time I had used Docker. I ran into some issues while doing the lab, for example, at the end of the lab I was getting some error messages. I checked the class Slack channel and realized others were having the same issue. Without the Slack channel, I would not have been able to complete the lab assignment. As for my COMP 484 work, I definitely learned some useful tips. In the past, when making HTML files, I would not use tags such as main, article and section. I now understand the importance of these tags and the ARIA roles. They allow the code to be legible, and can help with styling and scripting large amounts of similar code. Structure is very important when it comes to building websites and these tags are the way to properly structure your HTML file.</p>
 
 
     <marquee style="color:black;font-size: 20pt" behavior="scroll" direction="left">Thanks for reading. See you next week!</marquee>
</body>
</html>


