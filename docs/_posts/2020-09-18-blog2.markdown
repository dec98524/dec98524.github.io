---
layout: post
title:  "Blog 2"
date:   2020-09-18 12:40:45 -0700
categories: senior design
---

<html>



<style>
{% include custom.css %}
</style>

  <title>Blog 2</title>
<body>
<ul class="navbar">
 
  <li class="navbar"><a class="home" href="http://dec98524.github.io/">Home</a></li>
  <li class="navbar"><a href="https://github.com/dec98524/dec98524.github.io">Git Hub</a></li>
  <li class="navbar"><a href="https://www.instagram.com/im.davidcastaneda/">Instagram</a></li>
  <li class="navbar"><a href="https://twitter.com/refilldranks">Twitter</a></li>

</ul>
<br>
<div class="dropdown">
  <button class="dropbtn">All Blog Posts</button>
  <div class="dropdown-content">
    <a href="https://dec98524.github.io/senior/design/2020/08/27/blog-0.html">Blog 0</a>
    <a href="https://dec98524.github.io/senior/design/2020/09/08/blog1.html">Blog 1</a>
          <a href="https://dec98524.github.io/senior/design/2020/09/18/blog2.html">Blog 2</a>

  </div>
</div><br>
<br>
<marquee style="color:black;font-size: 20pt" behavior="scroll" direction="left"><i>Welcome to my blog site!</i></marquee>

    <center>
<img src="https://www.csun.edu/ua/2017logos/Seal-CSUN-Horizontal-186.png" alt="CSUN CIT" align="middle">
</center>

<h2>Introduction - Assignments Worked On</h2>

<p>For Blog #2, I will be writing about the work I did in my COMP 484 class, similar to the last 2 blogs. Last week we talked about certain HTML elements that are useful in regards to structuring your webpage. This pretty much concluded basic HTML. The next thing we were introduced to was CSS. I will go into detail on what this means, but in a nutshell: it is what makes your website look good. Going into this semester I was looking forward to learning this. I have a little bit of an understanding of CSS, but I am eager to learn methods, tips, strategies and practices that can elevate my web development to the next level. For those unaware of what CSS is, a breif synopsis follows.</p>

<h2>COMP 484 - Introduction to CSS</h2> 

      

<p>A website needs a number of thing to be successful, and one of them is style. This is where CSS comes into play.</p>


    <center>
    <a href="w3schools.com/css/">
<img src="https://sabe.io/classes/css/hero.png" alt="CSS Logo" align="middle">
</a>
</center>
<br> <br>

<dl>
  <dt><b>CSS</b></dt>
  <dd>Cascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.    
    </dd>
</dl>
<p>Down below, you will see some examples regardingf the presence and abscence of CSS, which will show how important implementing it into your website is.</p>
 <br><br>
  <center>
<img src="https://i.imgur.com/PqXBDk3.png" alt="no style" align="middle" width="auto" height="auto">
 <br><br>
<img src="https://i.imgur.com/lP82xDg.png" alt="styled" align="middle" width="auto" height="auto">
</center>
<br><br>
    
<p>In the two pictures above you can see two images of the same website. The first screenshot consists of pure HTML. This means that the website has all the necessary source code to display a basic webpage. Despite being able to display a page, this page is not so appealing to the eye. There is no color, organization or any sort of style. <br>
In the second screenshot, you are able to see the same webpage, with the same source HTML code, but with one major difference, an external stylesheet. Stylesheets are seperate .css files that contain all the properties that enable a website to look pretty. You are able to see right away, that in comparison to the first imaage, this one is much more organized, appealing and overall more styled.
</p>
      <center>
      <img src="https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/04/LV2OI0TM.png?fit=1024%2C333&ssl=1" alt="css code" align="middle">
</center>

  <dl>
  <dt><b>CSS Elements</b></dt>
  <dd>Here are a list of some elements that are used in CSS:
    <ul>
      <li>margin</li>
      <li>padding</li>
      <li>float</li>
      <li>display</li>
      <li>color</li>
      <li>font</li>
      <li>text</li>
      </ul>
    </dd>
</dl>

<p> Below is an example of some basic CSS syntax: 
     <br><code>h1{ <br> color: pink;<br>font-family: Courier;<br>background-color: black;<br>}</code><br></p>
<p>You start off a basic CSS block of code by determining which element you want to style, in this case it is h1. Next, inside two curly brackets, you add in the styling elements that you want to apply. Once all the style elements are marked down, every h1 will be styled according to the elements in the CSS file. Here is an example of what it looks like before and after.</p>
      <center>
      <img src="https://i.imgur.com/6LL9kmX.png" alt="example" align="middle">
</center>

  <dl>
  <dt><b>MySQL</b></dt>
  <dd>MySQL is an open-source relational database management system. Its name is a combination of "My", the name of co-founder Michael Widenius's daughter, and "SQL", the abbreviation for Structured Query Language.</dd>
</dl>
<p> To install MySQL and to verify the installation, type the following commands<br><code>$ apt-get install -y mysql-client</code><br><code>$ dpkg --get-selections | grep mysql</code><br></p>
     
<p>I then went on to install PHP and all of it's required packages</p>
      <center>
        <a href="https://www.php.net/">
      <img src="https://www.php.net/images/logos/new-php-logo.svg" alt="PHP Logo" align="middle">
    </a>
</center>

  <dl>
  <dt><b>PHP</b></dt>
  <dd>PHP is a general-purpose scripting language that is especially suited to web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994; the PHP reference implementation is now produced by The PHP Group.</dd>
</dl>
 <p> In order to install PHP and all of the packages, and to check the version, type these commands into the command line on your terminal: 
     <br><code>$ apt-get install -y php libapache2-mod-php php-mysql php7.2-cli php7.2-curl php7.2-gd php7.2-mbstring php7.2-mysql php7.2-xmlphp-xml</code><br><code>$ php -v</code><br></p>


<p>The final thing I needed to install was Composer</p>
      <center>
        <a href="https://getcomposer.org/">
      <img src="https://getcomposer.org/img/logo-composer-transparent.png" alt="Composer Logo" align="middle">
    </a>
</center>

  <dl>
  <dt><b>Composer</b></dt>
  <dd>Composer is an application-level package manager for the PHP programming language that provides a standard format for managing dependencies of PHP software and required libraries. It was developed by Nils Adermann and Jordi Boggiano, who continue to manage the project.</dd>
</dl>
 <p> In order to install composer type this command into the command line on your terminal: 
     <br><code>$ curl -sS https://getcomposer.org/installer | php ----install-dir=/usr/local/bin --filename=composer</code></p>
<br>
<p>After installing all of these packages, I was able to successfully set up a LAMP stack and display it on a a web page. Here was my output:</p>

<br><br>
  <center>
<img src="https://i.imgur.com/kDY0NCy.png" alt="Browser Output" align="middle" width="auto" height="auto">
 <br><br>
<img src="https://i.imgur.com/8VgOk7N.png" alt="Terminal Output" align="middle" width="auto" height="auto">
</center>
<br><br>


<h2>COMP 484 - Homework - HTML</h2> 

<p>In my COMP 484 class, I was assigned three homework assignments. Though it seems like a lot, these assignments were rather simple. A main part if the homework consisted of taking an html file and editing it to structure the page using elements such header, nav, main, article, section, aside and footer.We were then asked to add ARIA roles to the elements. Below you can find the meaning to some of these very important HTML Terms:</p>
 
  <center>
    <a href="https://www.w3schools.com/html/">
<img src="https://cdn.mos.cms.futurecdn.net/hFm4iWXhbw4c4rdcMH8tUD.jpg" alt="HTML Logo" align="middle">
</a>
</center>
<br> <br>
<h3>All definitions from <a href="https://www.w3schools.com">w3schools.com</a></h3>
<dl>
  <dt><b>Header</b></dt>
  <dd>The header element represents a container for introductory content or a set of navigational links. Headers often include one or more heading elements (h1 - h6), logos or icons and authorship information</dd>
  <dt><b>Nav</b></dt>
  <dd>The nav tag defines a set of navigation links. Notice that NOT all links of a document should be inside a nav element. The nav element is intended only for major block of navigation links. Browsers, such as screen readers for disabled users, can use this element to determine whether to omit the initial rendering of this content.</dd>
  <dt><b>Main</b></dt>
  <dd>The main tag specifies the main content of a document. The content inside the main element should be unique to the document. It should not contain any content that is repeated across documents such as sidebars, navigation links, copyright information, site logos, and search forms.</dd>
  <dt><b>Article</b></dt>
  <dd>The article tag specifies independent, self-contained content. An article should make sense on its own and it should be possible to distribute it independently from the rest of the site. Potential uses include Forum posts, Blog posts and News stories.

</dd>
  <dt><b>Section</b></dt>
  <dd>The section tag simply defines a section in a document.
</dd>
  <dt><b>Aside</b></dt>
  <dd>The aside tag defines some content aside from the content it is placed in. The aside content should be indirectly related to the surrounding content.</dd>
  <dt><b>Footer</b></dt>
  <dd>The footer tag defines a footer for a document or section. A footer element typically contains: authorship information, copyright information, contact information, sitemap, back to top links and related documents. You can have several footer elements in one document.</dd>
    
</dl>

<h2>Reflection - Things I learned</h2>
<p>After completeing all my assignments this week, there were definitely some new things I learned. One of the main things I learned was the importance of a LAMP stack and the role it plays in web development. Despite many of my peers using Docker in previous classes, this was the first time I had used Docker. I ran into some issues while doing the lab, for example, at the end of the lab I was getting some error messages. I checked the class Slack channel and realized others were having the same issue. Without the Slack channel, I would not have been able to complete the lab assignment. As for my COMP 484 work, I definitely learned some useful tips. In the past, when making HTML files, I would not use tags such as main, article and section. I now understand the importance of these tags and the ARIA roles. They allow the code to be legible, and can help with styling and scripting large amounts of similar code. Structure is very important when it comes to building websites and these tags are the way to properly structure your HTML file.</p>
 
 
     <marquee style="color:black;font-size: 20pt" behavior="scroll" direction="left">Thanks for reading. See you next week!</marquee>
</body>
</html>


